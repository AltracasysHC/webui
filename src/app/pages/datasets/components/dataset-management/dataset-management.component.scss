@import '~assets/styles/mixins/grid';
@import '~assets/styles/mixins/breakpoints';

:host {
  display: block;
}

.loader-bar {
  height: 2px;
  position: absolute;
  top: 0;
}

.container {
  display: flex;
  flex-direction: row;
  min-height: 100%;
}

.table-container {
  box-sizing: border-box;
  display: flex;
  flex: 1;
  flex-direction: column;
  max-width: 700px;
  position: relative;

  // Hide Details and stop compressing table width
  @media (min-width: $breakpoint-min-mobile) and (max-width: $breakpoint-tablet) {
    min-width: $breakpoint-min-mobile;
    overflow-x: hidden;
    width: 100%;
  }

  // Hide Details and stop compressing table width
  /*@media (max-width: $table-width) {
    min-width: $table-width;
    overflow-x: auto;
  }*/

  // Hide Details and stretch table
  @media (min-width: $breakpoint-tablet) and (max-width: $breakpoint-hidden) {
    min-width: 100%;
  }

  // One Cards Column
  @media (min-width: $breakpoint-singlecolumn) and (max-width: calc($breakpoint-dualcolumn - 1px)) {
    min-width: calc(98% - ($card-width + $gap));
  }

  // Two Cards Columns
  @media (min-width: $breakpoint-dualcolumn) and (max-width: calc($breakpoint-flex - 1px)) {
    min-width: calc(98% - 2 * ($card-width + $gap));
  }

  // Three Cards Columns
  @media (min-width: $breakpoint-triplecolumn) and (max-width: calc($breakpoint-flex - 1px)) {
    min-width: calc(98% - 3 * ($card-width + $gap));
  }

  // Cards spill to the right
  @media (min-width: $breakpoint-flex) {
    max-width: 1200px;
    width: 50%;
  }
}

.details-container {
  color: var(--fg2);
  display: flex;
  flex: 1;
  max-width: 70%;
  min-width: inherit;
  overflow: hidden;
  padding: 0;
  position: sticky;
  top: 0;

  // Hide Details
  @media (max-width: $breakpoint-hidden) {
    display: none;
  }
}

.details-container.details-container-mobile {
  // Hide Details
  @media (max-width: $breakpoint-hidden) {
    background: var(--bg1);
    display: flex;
    height: 100% !important;
    left: 0;
    max-width: 100%;
    padding-top: 64px;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 3;
  }

  @media (max-width: $breakpoint-tablet) {
    display: block;
    overflow-y: auto;
    padding-bottom: 96px;
  }

  ::ng-deep .cards .scroll-window {
    display: grid;
  }

  ::ng-deep .cards .scroll-window > * {
    margin: 0 auto;
    max-width: 455px;
    //min-width: 99% !important;
    min-width: unset !important;
    width: 99% !important;
  }

}

ix-dataset-details-panel {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.dataset-tree-search {
  background-color: var(--bg2);
  padding: 16px;
  position: sticky;
  top: -15px;
  z-index: 1;
}

.dataset-tree-wrapper {
  display: flex;
  flex: 1;
  flex-direction: column;
  margin-bottom: 0.333rem;
  overflow: auto;
}

.dataset-tree-inner {
  display: flex;
  flex: 1;
  flex-direction: column;
  min-width: fit-content;

  @media (max-width: $breakpoint-tablet) {
    min-height: fit-content; // calc(100vh - 220px);
    min-width: unset;
    overflow-x: auto;
    //padding-bottom: 96px;
  }
}

.dataset-tree {
  border-top: 2px solid var(--lines);
}

.dataset-tree-header {
  @include grid-row();

  align-items: center;
  color: var(--fg2);

  // Override default fraction based values to avoid misaligned columns
  grid-template-columns: auto 150px 150px 150px;
  min-height: 48px;
  padding-left: 48px;

  @media (max-width: $breakpoint-tablet) {
    grid-template-columns: auto 0 0 0;
    //border: solid 1px cyan;
    width: auto;
  }

  > div {
    font-weight: bold;
    padding: 4px 0;

    @media (max-width: $breakpoint-tablet) {
      display: none;
    }

    &:first-child {
      left: 0;
      position: sticky;
      @media (max-width: $breakpoint-tablet) {
        display: block;
      }
    }
  }

  .dataset-name-header {
    background: linear-gradient(90deg, var(--bg1) 0%, var(--bg1) calc(100% - 13px), transparent 100%);
    padding-left: 8px;
    padding-right: 15px;
  }
}

.dataset-nested-tree-root-node {
  align-items: center;
  border-bottom: 1px solid var(--lines);
  cursor: pointer;
  display: flex;
  min-width: fit-content;
  position: relative;

  &:hover {
    background-color: var(--hover-bg);
  }

  &.selected {
    background-color: var(--hover-bg);
    color: var(--fg2);

    &::before {
      background-color: var(--primary);
      content: '';
      height: 100%;
      left: 0;
      opacity: 1;
      position: absolute;
      top: 0;
      width: 6px;
    }
  }
}

.dataset-nested-tree-root-node ix-icon.mobile-actions,
.ix-nested-tree-node ix-icon.mobile-actions {
  display: none;

  @media (max-width: $breakpoint-hidden) {
    display: flex;
    margin: 12px;
    position: relative;
    right: 8px;
  }
}
