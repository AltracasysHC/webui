@import '~assets/styles/mixins/animations';
@import '~assets/styles/mixins/buttons';
@import '~assets/styles/mixins/breakpoints';

@mixin details-cards {
  height: 100%;
  overflow-y: auto;
  overscroll-behavior: contain;
  width: 100%;

  .scroll-window {

    // GRID 
    display: grid;
    grid-template-columns: auto;

    // Too Narrow
    @media (max-width: $breakpoint-hidden) {
      display: none;
    }

    // One Column
    @media (min-width: $breakpoint-singlecolumn) and (max-width: calc($breakpoint-dualcolumn - 1px)) {
      display: grid;
      grid-template-columns: auto;
      place-content: start;
    }

    // Two Columns 
    @media (min-width: $breakpoint-dualcolumn) and (max-width: calc($breakpoint-flex - 1px)) {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: $gap;
      height: 100%;

      min-height: 1240px;
      place-content: flex-start;
      width: calc(2 * ($card-width + $gap));
    }

    // Three Columns 
    @media (min-width: $breakpoint-triplecolumn) and (max-width: calc($breakpoint-flex - 1px)) {
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: $gap;
      height: 100%;

      min-height: 1140px;
      place-content: flex-start;
      width: calc(3 * ($card-width + $gap));
    }

    // Switch to Flexbox wrapping columns
    @media  (min-width: $breakpoint-flex) {
      align-items: flex-start;
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      gap: 12px;
      place-content: flex-start;
    }

    @media  (min-width: $breakpoint-flex) and (min-height: 1200px) {
      height: calc(100vh - 260px);
      min-height: unset;
    }

    @media  (min-width: $breakpoint-flex) and (max-height: 1199px) {
      height: 900px;
    }

    > * {
      min-width: $card-width;
      width: $card-width;
    }

  }

}

@mixin details-card {
  border: none;
  border-radius: 0;

  mat-card-header {
    align-items: center;
    border-bottom: 1px solid var(--lines);
    justify-content: space-between;
    min-height: 40px;
    padding: 15px 15px 15px 0;
  }

  .mat-card-title {
    align-items: center;
    column-gap: 5px;
    display: flex;
    font-size: 1.65rem;
    margin-bottom: 0;
  }

  mat-card-content {
    margin: 0;
    padding: 20px 25px;

    > div {
      padding: 0;
    }
  }

  ngx-skeleton-loader {
    flex: 1;
  }

  .details-item {
    @include fade-in();

    align-items: center;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin-bottom: 4px;

    &:last-child {
      margin-bottom: 0;
    }

    .label {
      font-weight: bold;
      margin-right: 5px;
      white-space: nowrap;
    }

    .value {
      font-weight: normal;
      margin-right: 5px;
      white-space: nowrap;
    }

    a {
      color: var(--primary);
      cursor: pointer;
      margin-left: auto;
      max-width: 50%;
      overflow: hidden;
      text-decoration: underline;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    ngx-skeleton-loader {
      display: inline-block;
      flex: 0;
      height: 20px;
      min-width: 30px;
      width: 30%;

      ::ng-deep .loader {
        margin-bottom: 0;
      }
    }
  }

  mat-card-actions {
    border-top: 1px solid var(--lines);
    box-sizing: border-box;
    display: flex;
    justify-content: flex-end;
    margin: 0;
    padding: 15px;

    .mat-stroked-button {
      @include stroked-button();
    }
  }
}

@mixin resource-cards {
  @include details-cards();

  gap: 16px;

  > * {
    max-width: 360px;
    min-width: 360px;
  }
}

@mixin resource-card {
  @include details-card();

  mat-card-header {
    border-bottom: none;
  }

  mat-card-content {
    align-items: center;
    display: flex;
    justify-content: space-between;

    .value {
      font-size: 3.5em;
      white-space: nowrap;
    }
  }
}

@mixin loader-block {
  background: var(--fg2);
  border-radius: 3px;
  height: 20px;
  opacity: 0.3;
}
